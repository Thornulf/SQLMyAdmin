/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fr.ts.boundaries;

import fr.ts.entities.GlobalesConnection;
import fr.ts.entities.GlobalesFonctions;
import java.beans.PropertyVetoException;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Joke-
 */
public class Ajouter extends javax.swing.JInternalFrame {

    public Connection cn;
    private DatabaseMetaData ldbmd;
    private int giColonne;
    private int nbLigne = 1;
    private DefaultTableModel idtm;

    public Ajouter() {
        initComponents();
        setTitle("Ajouter");

        try {
            cn = GlobalesConnection.getConnection();
            ldbmd = cn.getMetaData();

            GlobalesFonctions.fillListDateBase(cn, ldbmd, jListBaseDonnees);

            jLabelMessage.setText("");
            jLabelMessageErreur.setText("");

            setVisible(true);
        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
        }
    }

    private DefaultTableModel fillTable(ResultSetMetaData lrsmd) {
        DefaultTableModel out = null;

        try {

            List<String> lEntetes = new ArrayList();
            String[] tEntetes;
            Object[][] tDataTable;

            giColonne = 0;

            for (int i = 0; i < lrsmd.getColumnCount(); i++) {
                if (!lrsmd.isAutoIncrement(i + 1)) {
                    lEntetes.add(lrsmd.getColumnName(i + 1));
                    giColonne++;
                }
            }

            tEntetes = lEntetes.toArray(new String[lEntetes.size()]);

            tDataTable = new Object[1][giColonne];

            out = new DefaultTableModel(tDataTable, tEntetes);

        } catch (SQLException ex) {
            jLabelMessageErreur.setText(ex.getMessage());
        }
        return out;
    }

    private String createStringInsert(String dataBases, String table, String[] tValues) {

        String out = null;
        ResultSet rs;
        ResultSetMetaData lrsmd;

        try (Statement stmt = cn.createStatement()) {
            rs = stmt.executeQuery("SELECT * FROM " + dataBases + "." + table);

            StringBuilder lsbInsert = new StringBuilder();
            lrsmd = rs.getMetaData();

            lsbInsert.append("INSERT INTO ");
            lsbInsert.append(dataBases);
            lsbInsert.append(".");
            lsbInsert.append(table);
            lsbInsert.append(" (");

            for (int i = 0; i < lrsmd.getColumnCount(); i++) {
                if (!lrsmd.isAutoIncrement(i + 1)) {
                    lsbInsert.append(lrsmd.getColumnName(i + 1));
                    lsbInsert.append(", ");
                }
            }

            out = lsbInsert.substring(0, lsbInsert.length() - 2);

            lsbInsert = new StringBuilder();
            lsbInsert.append(") VALUES (");

            for (String tValue : tValues) {
                lsbInsert.append("'");
                lsbInsert.append(tValue);
                lsbInsert.append("', ");
            }

            out += lsbInsert.substring(0, lsbInsert.length() - 2);
            out += ")";

            rs.close();

        } catch (SQLException e) {
            System.err.println(e.getMessage());
        }

        return out;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListBaseDonnees = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListTables = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableAjout = new javax.swing.JTable();
        jButtonAjouter = new javax.swing.JButton();
        jButtonAddRow = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabelMessageErreur = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabelMessage = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Ajouter");

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Base de donn√©es");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Tables");
        jLabel2.setToolTipText("");

        jListBaseDonnees.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jListBaseDonneesMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jListBaseDonnees);

        jListTables.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jListTablesMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jListTables);

        jTableAjout.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTableAjout);

        jButtonAjouter.setText("Ajouter");
        jButtonAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAjouterActionPerformed(evt);
            }
        });

        jButtonAddRow.setText("Ajout ligne");
        jButtonAddRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddRowActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabelMessageErreur.setForeground(new java.awt.Color(255, 0, 0));
        jLabelMessageErreur.setText("Message Erreur");

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel3.setText("Message :");

        jLabelMessage.setText("Message");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMessageErreur)
                    .addComponent(jLabelMessage))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jLabelMessage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(jLabelMessageErreur, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(16, 16, 16))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(235, 235, 235)
                .addComponent(jButtonAjouter, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(303, 303, 303)
                .addComponent(jButtonAddRow)
                .addGap(174, 318, Short.MAX_VALUE))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAjouter)
                    .addComponent(jButtonAddRow))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jListBaseDonneesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListBaseDonneesMouseReleased
        GlobalesFonctions.fillListTable(cn, ldbmd, jListBaseDonnees, jListTables);
    }//GEN-LAST:event_jListBaseDonneesMouseReleased

    private void jListTablesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListTablesMouseReleased
        String lsDataBase = jListBaseDonnees.getSelectedValue();
        String lsTable = jListTables.getSelectedValue();

        ResultSet rs;
        ResultSetMetaData lrsmd;

        try (Statement stmt = cn.createStatement()) {

            rs = stmt.executeQuery("SELECT * FROM " + lsDataBase + "." + lsTable);
            lrsmd = rs.getMetaData();

            idtm = fillTable(lrsmd);
            jTableAjout.setModel(idtm);

            rs.close();
        } catch (SQLException e) {
            System.err.println(e.getMessage());
        }
    }//GEN-LAST:event_jListTablesMouseReleased

    private void jButtonAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAjouterActionPerformed

        String bd = jListBaseDonnees.getSelectedValue();
        String table = jListTables.getSelectedValue();

        StringBuilder lsb;

        for (int j = 0; j < nbLigne; j++) {
            lsb = new StringBuilder();
            for (int i = 0; i < giColonne; i++) {
                lsb.append(jTableAjout.getValueAt(j, i));
                lsb.append(",");
            }
            String values = lsb.toString().substring(0, lsb.length() - 1);

            String[] tValues = values.split(",");

            String sqlInsert = createStringInsert(bd, table, tValues);

            try (PreparedStatement lpst = cn.prepareStatement(sqlInsert)) {
                int affect = lpst.executeUpdate();
                jLabelMessage.setText("Ajout effectu√©");
            } catch (SQLException ex) {
                jLabelMessageErreur.setText(ex.getMessage());
            }
        }
    }//GEN-LAST:event_jButtonAjouterActionPerformed

    private void jButtonAddRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddRowActionPerformed

        nbLigne++;
        List<String> newLine = new ArrayList();
        for (int i = 0; i < giColonne; i++) {
            newLine.add("");
        }

        String[] tNewLine;
        tNewLine = newLine.toArray(new String[newLine.size()]);

        idtm.addRow(tNewLine);
    }//GEN-LAST:event_jButtonAddRowActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddRow;
    private javax.swing.JButton jButtonAjouter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelMessage;
    private javax.swing.JLabel jLabelMessageErreur;
    private javax.swing.JList<String> jListBaseDonnees;
    private javax.swing.JList<String> jListTables;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableAjout;
    // End of variables declaration//GEN-END:variables
}
